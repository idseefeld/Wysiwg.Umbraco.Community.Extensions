{"version":3,"file":"wysiwg-base-block-editor-custom.view-NTK5T3_I.js","sources":["../../../Wysiwg/src/blocks/views/wysiwg-base-block-editor-custom.view.ts"],"sourcesContent":["import {\r\n  customElement,\r\n  LitElement,\r\n  property,\r\n  state,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport type { UmbBlockEditorCustomViewConfiguration, UmbBlockEditorCustomViewElement } from \"@umbraco-cms/backoffice/block-custom-view\";\r\nimport {\r\n  UMB_PROPERTY_DATASET_CONTEXT,\r\n  UmbPropertyDatasetContext,\r\n  UmbPropertyValueDataPotentiallyWithEditorAlias,\r\n} from \"@umbraco-cms/backoffice/property\";\r\nimport { UmbBlockGridValueModel } from \"@umbraco-cms/backoffice/block-grid\";\r\nimport { UmbBlockDataModel, UmbBlockDataType } from \"@umbraco-cms/backoffice/block\";\r\nimport { UpdateStatus } from \"../../util/updateStatusEnum\";\r\nimport { UMB_NOTIFICATION_CONTEXT, UmbNotificationContext } from \"@umbraco-cms/backoffice/notification\";\r\nimport { CommonUtilities } from \"../../util/common.utilities\";\r\nimport { Debugging, TransparentBackgroundColor } from \"../../constants\";\r\n\r\nconst customElementName = \"wysiwg-base.block-editor-custom-view\";\r\n@customElement(customElementName)\r\nexport class WysiwgBaseBlockEditorCustomViewElement\r\n  extends UmbElementMixin(LitElement)\r\n  implements UmbBlockEditorCustomViewElement {\r\n\r\n  @property({ attribute: false })\r\n  content?: UmbBlockDataType;\r\n\r\n  @property({ attribute: false })\r\n  config?: UmbBlockEditorCustomViewConfiguration;\r\n\r\n  @property({ attribute: false })\r\n  settings?: UmbBlockDataType;\r\n\r\n  @state()\r\n  protected datasetSettings?: UmbBlockDataModel[];\r\n\r\n  @state()\r\n  protected updateStatus: UpdateStatus | undefined = undefined;\r\n\r\n  protected _commonUtilities: CommonUtilities | undefined = undefined;\r\n\r\n  protected _debug = Debugging;\r\n\r\n  #datasetContext?: UmbPropertyDatasetContext;\r\n\r\n  #notificationContext: UmbNotificationContext | undefined = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_NOTIFICATION_CONTEXT, (notificationContext) => {\r\n      this.#notificationContext = notificationContext;\r\n      this._commonUtilities = new CommonUtilities(this.localize, notificationContext);//ToDo: should be singleton via context(?)\r\n    });\r\n\r\n    this.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, async (context) =>\r\n      this.getSettings(context)\r\n    );\r\n  }\r\n\r\n  protected async setUpdateStatus() {\r\n    if (this.updateStatus) return;\r\n\r\n    await this._commonUtilities?.getUpdateStatus(this.#notificationContext).then((status) => {\r\n      if (status) {\r\n        this.updateStatus = status;\r\n      }\r\n    });\r\n  }\r\n\r\n  protected isTransparentColor(color: string) {\r\n    return color === TransparentBackgroundColor;\r\n  }\r\n\r\n  protected async getSettings(context: any) {\r\n    this.#datasetContext = context;\r\n    this.observe(\r\n      this.#datasetContext?.properties,\r\n      async (properties) => {\r\n        const pageProperties = properties as Array<UmbPropertyValueDataPotentiallyWithEditorAlias>;\r\n        if (pageProperties?.length) {\r\n          const allGridValues = pageProperties\r\n            .filter((v) => v.editorAlias === \"Umbraco.BlockGrid\") as Array<UmbPropertyValueDataPotentiallyWithEditorAlias>;\r\n\r\n          const editSettingsPath = this.config?.editSettingsPath ?? \"\";\r\n\r\n          let thisGrid = allGridValues[0];\r\n          if (allGridValues.length > 1) {\r\n            for (let i = 0; i < allGridValues.length; i++) {\r\n              const grid = allGridValues[i];\r\n              if (grid.alias && (editSettingsPath.indexOf(grid.alias) >= 0)) {\r\n                thisGrid = grid;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const gridValues = thisGrid.value as UmbBlockGridValueModel;\r\n\r\n          this.prozessSettings(gridValues);\r\n\r\n          this.lastStepObservingProperties(pageProperties);\r\n        }\r\n      },\r\n      \"_observeProperties\"\r\n    );\r\n  }\r\n\r\n  protected async prozessSettings(gridValues: UmbBlockGridValueModel) {\r\n    this.datasetSettings = gridValues.settingsData;\r\n  }\r\n\r\n  protected async lastStepObservingProperties(pageProperties: Array<UmbPropertyValueDataPotentiallyWithEditorAlias>) {\r\n    if (!pageProperties) { return; }\r\n  }\r\n}\r\n\r\nexport default WysiwgBaseBlockEditorCustomViewElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    [customElementName]: WysiwgBaseBlockEditorCustomViewElement;\r\n  }\r\n}\r\n"],"names":["_datasetContext","_notificationContext","customElementName","WysiwgBaseBlockEditorCustomViewElement","UmbElementMixin","LitElement","Debugging","__privateAdd","UMB_NOTIFICATION_CONTEXT","notificationContext","__privateSet","CommonUtilities","UMB_PROPERTY_DATASET_CONTEXT","context","_a","__privateGet","status","color","TransparentBackgroundColor","properties","pageProperties","allGridValues","v","editSettingsPath","thisGrid","i","grid","gridValues","__decorateClass","property","state","customElement"],"mappings":";;;;;;;;;;;gVAAAA,GAAAC;AAoBA,MAAMC,IAAoB;AAEnB,IAAMC,IAAN,cACGC,EAAgBC,CAAU,EACS;AAAA,EAyB3C,cAAc;AACN,UAAA,GAXR,KAAU,eAAyC,QAEnD,KAAU,mBAAgD,QAE1D,KAAU,SAASC,GAEnBC,EAAA,MAAAP,CAAA,GAEAO,EAAA,MAAAN,CAAA,GAKO,KAAA,eAAeO,GAA0B,CAACC,MAAwB;AACrE,MAAAC,EAAA,MAAKT,GAAuBQ,CAAA,GAC5B,KAAK,mBAAmB,IAAIE,EAAgB,KAAK,UAAUF,CAAmB;AAAA,IAAA,CAC/E,GAEI,KAAA;AAAA,MAAeG;AAAA,MAA8B,OAAOC,MACvD,KAAK,YAAYA,CAAO;AAAA,IAC1B;AAAA,EAAA;AAAA,EAGF,MAAgB,kBAAkB;;AAChC,IAAI,KAAK,gBAEH,QAAAC,IAAA,KAAK,qBAAL,gBAAAA,EAAuB,gBAAgBC,EAAA,MAAKd,IAAsB,KAAK,CAACe,MAAW;AACvF,MAAIA,MACF,KAAK,eAAeA;AAAA,IACtB;AAAA,EACD;AAAA,EAGO,mBAAmBC,GAAe;AAC1C,WAAOA,MAAUC;AAAA,EAAA;AAAA,EAGnB,MAAgB,YAAYL,GAAc;;AACxC,IAAAH,EAAA,MAAKV,GAAkBa,CAAA,GAClB,KAAA;AAAA,OACHC,IAAAC,QAAKf,CAAiB,MAAtB,gBAAAc,EAAsB;AAAA,MACtB,OAAOK,MAAe;;AACpB,cAAMC,IAAiBD;AACvB,YAAIC,KAAA,QAAAA,EAAgB,QAAQ;AAC1B,gBAAMC,IAAgBD,EACnB,OAAO,CAACE,MAAMA,EAAE,gBAAgB,mBAAmB,GAEhDC,MAAmBT,IAAA,KAAK,WAAL,gBAAAA,EAAa,qBAAoB;AAEtD,cAAAU,IAAWH,EAAc,CAAC;AAC1B,cAAAA,EAAc,SAAS;AACzB,qBAASI,IAAI,GAAGA,IAAIJ,EAAc,QAAQI,KAAK;AACvC,oBAAAC,IAAOL,EAAcI,CAAC;AAC5B,kBAAIC,EAAK,SAAUH,EAAiB,QAAQG,EAAK,KAAK,KAAK,GAAI;AAClD,gBAAAF,IAAAE;AACX;AAAA,cAAA;AAAA,YACF;AAGJ,gBAAMC,IAAaH,EAAS;AAE5B,eAAK,gBAAgBG,CAAU,GAE/B,KAAK,4BAA4BP,CAAc;AAAA,QAAA;AAAA,MAEnD;AAAA,MACA;AAAA,IACF;AAAA,EAAA;AAAA,EAGF,MAAgB,gBAAgBO,GAAoC;AAClE,SAAK,kBAAkBA,EAAW;AAAA,EAAA;AAAA,EAGpC,MAAgB,4BAA4BP,GAAuE;AAAA,EAClF;AAEnC;AAvEEpB,IAAA,oBAAA,QAAA;AAEAC,IAAA,oBAAA,QAAA;AApBA2B,EAAA;AAAA,EADCC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAJnB1B,EAKX,WAAA,WAAA,CAAA;AAGAyB,EAAA;AAAA,EADCC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAPnB1B,EAQX,WAAA,UAAA,CAAA;AAGAyB,EAAA;AAAA,EADCC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAVnB1B,EAWX,WAAA,YAAA,CAAA;AAGUyB,EAAA;AAAA,EADTE,EAAM;AAAA,GAbI3B,EAcD,WAAA,mBAAA,CAAA;AAGAyB,EAAA;AAAA,EADTE,EAAM;AAAA,GAhBI3B,EAiBD,WAAA,gBAAA,CAAA;AAjBCA,IAANyB,EAAA;AAAA,EADNG,EAAc7B,CAAiB;AAAA,GACnBC,CAAA;"}