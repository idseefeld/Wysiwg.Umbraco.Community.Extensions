{"version":3,"file":"constants-BvAuY3a0.js","sources":["../../../Wysiwg/src/util/common.utilities.ts","../../../Wysiwg/src/constants.ts"],"sourcesContent":["import { UmbLocalizationController } from \"@umbraco-cms/backoffice/localization-api\";\r\nimport { GetServerInformationResponse, ServerService } from \"../management-api\";\r\nimport { SemVersion } from \"./types\";\r\nimport { UmbNotificationContext } from \"@umbraco-cms/backoffice/notification\";\r\nimport { UpdateStatus } from \"./updateStatusEnum\";\r\nimport { WysiwgUmbracoCommunityExtensionsService } from \"../api\";\r\n\r\nexport class CommonUtilities {\r\n  private _localize: UmbLocalizationController;\r\n  private _notificationContext: UmbNotificationContext;\r\n\r\n  constructor(localize: UmbLocalizationController, notificationContext: UmbNotificationContext) {\r\n    this._localize = localize;\r\n    this._notificationContext = notificationContext;\r\n  }\r\n\r\n  public async getUmbracoVersion(notificationContext?: UmbNotificationContext): Promise<SemVersion | undefined> {\r\n    if (!notificationContext) { return; }\r\n\r\n    const { data, error } = await ServerService.getServerInformation();\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      if (this._notificationContext) {\r\n        this._notificationContext.stay(\"danger\", {\r\n          data: {\r\n            headline: this._localize.term(\"wysiwg_serverInfoError\"),\r\n            message: `${this._localize.term(\"wysiwg_serverInfoErrorDescription\")}`,\r\n          },\r\n        });\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      const serverInfo = data as GetServerInformationResponse;\r\n      const assemblyVersion = serverInfo?.assemblyVersion.split(\".\");\r\n      const version = {\r\n        major: assemblyVersion.length > 0 ? parseInt(assemblyVersion[0]) : 1,\r\n        minor: assemblyVersion.length > 1 ? parseInt(assemblyVersion[1]) : 0,\r\n        patch: assemblyVersion.length > 2 ? parseInt(assemblyVersion[2]) : 0\r\n      } as SemVersion;\r\n\r\n      return version;\r\n    }\r\n  }\r\n\r\n  public async getUpdateStatus(notificationContext?: UmbNotificationContext): Promise<UpdateStatus | undefined> {\r\n    const { data, error } =\r\n      await WysiwgUmbracoCommunityExtensionsService.getUpdateStatusCode();\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      if (notificationContext) {\r\n        notificationContext.stay(\"danger\", {\r\n          data: {\r\n            headline: this._localize.term(\"wysiwg_versionError\"),\r\n            message: `${this._localize.term(\"wysiwg_versionErrorDescription\")} ${error}`,\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      return data;\r\n    }\r\n  }\r\n}\r\n","export const Debugging = false;\r\nexport const TransparentBackgroundColor = \"#fff\";//work-a-round: color picker does not support transparent color\r\n"],"names":["CommonUtilities","localize","notificationContext","data","error","ServerService","serverInfo","assemblyVersion","WysiwgUmbracoCommunityExtensionsService","Debugging","TransparentBackgroundColor"],"mappings":";;AAOO,MAAMA,EAAgB;AAAA,EAI3B,YAAYC,GAAqCC,GAA6C;AAC5F,SAAK,YAAYD,GACjB,KAAK,uBAAuBC;AAAA,EAAA;AAAA,EAG9B,MAAa,kBAAkBA,GAA+E;AAC5G,QAAI,CAACA;AAAuB;AAE5B,UAAM,EAAE,MAAAC,GAAM,OAAAC,EAAU,IAAA,MAAMC,EAAc,qBAAqB;AAEjE,QAAID,GAAO;AACT,cAAQ,MAAMA,CAAK,GACf,KAAK,wBACF,KAAA,qBAAqB,KAAK,UAAU;AAAA,QACvC,MAAM;AAAA,UACJ,UAAU,KAAK,UAAU,KAAK,wBAAwB;AAAA,UACtD,SAAS,GAAG,KAAK,UAAU,KAAK,mCAAmC,CAAC;AAAA,QAAA;AAAA,MACtE,CACD;AAEH;AAAA,IAAA;AAGF,QAAID,MAAS,QAAW;AACtB,YAAMG,IAAaH,GACbI,IAAkBD,KAAA,gBAAAA,EAAY,gBAAgB,MAAM;AAOnD,aANS;AAAA,QACd,OAAOC,EAAgB,SAAS,IAAI,SAASA,EAAgB,CAAC,CAAC,IAAI;AAAA,QACnE,OAAOA,EAAgB,SAAS,IAAI,SAASA,EAAgB,CAAC,CAAC,IAAI;AAAA,QACnE,OAAOA,EAAgB,SAAS,IAAI,SAASA,EAAgB,CAAC,CAAC,IAAI;AAAA,MACrE;AAAA,IAEO;AAAA,EACT;AAAA,EAGF,MAAa,gBAAgBL,GAAiF;AAC5G,UAAM,EAAE,MAAAC,GAAM,OAAAC,EACZ,IAAA,MAAMI,EAAwC,oBAAoB;AAcpE,QAZIJ,MACF,QAAQ,MAAMA,CAAK,GACfF,KACFA,EAAoB,KAAK,UAAU;AAAA,MACjC,MAAM;AAAA,QACJ,UAAU,KAAK,UAAU,KAAK,qBAAqB;AAAA,QACnD,SAAS,GAAG,KAAK,UAAU,KAAK,gCAAgC,CAAC,IAAIE,CAAK;AAAA,MAAA;AAAA,IAC5E,CACD,IAIDD,MAAS;AACJ,aAAAA;AAAA,EACT;AAEJ;ACnEO,MAAMM,IAAY,IACZC,IAA6B;"}