{"version":3,"file":"paragraph.view-DH-GiC5k.js","sources":["../../../Wysiwg/src/blocks/views/paragraph.view.ts"],"sourcesContent":["import { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\r\nimport {\r\n  html,\r\n  customElement,\r\n  css,\r\n  unsafeHTML,\r\n  PropertyValues,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport type { UmbBlockEditorCustomViewElement } from \"@umbraco-cms/backoffice/block-custom-view\";\r\nimport WysiwgBaseBlockEditorCustomViewElement from \"./wysiwg-base-block-editor-custom.view\";\r\n\r\nconst customElementName = \"wysiwg-block-paragraph-view\";\r\n@customElement(customElementName)\r\nexport class WysiwgBlockParagraphView\r\n  extends WysiwgBaseBlockEditorCustomViewElement {\r\n\r\n  protected override update(changedProperties: PropertyValues): void {\r\n    super.update(changedProperties);\r\n    if (changedProperties.has(\"content\")) {\r\n      const paragraphElement = this.shadowRoot?.querySelector('div.paragraph') as HTMLFormElement;\r\n      if (!paragraphElement) return;\r\n\r\n      const links = paragraphElement.querySelector('a');\r\n      if (links) {\r\n        links.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n        });\r\n      }\r\n\r\n      this.requestUpdate();\r\n    }\r\n\r\n  }\r\n  override render() {\r\n    let color = { label: \"\", value: \"\" };\r\n    let inlineStyle = \"\";\r\n    if (this.datasetSettings?.length) {\r\n      const layout = (this as UmbBlockEditorCustomViewElement).layout;\r\n      const settings = this.datasetSettings.filter(\r\n        (s) => layout?.settingsKey === s.key\r\n      )[0]?.values;\r\n\r\n      const colorSetting =\r\n        (settings.filter((v) => v.alias === \"color\")[0]?.value as {\r\n          label: string;\r\n          value: string;\r\n        }) ?? color;\r\n      if (colorSetting?.value) {\r\n        inlineStyle = `color: ${colorSetting?.value};`;\r\n      }\r\n\r\n      const minHeight = (settings?.find((v) => v.alias === \"minHeight\")?.value ?? \"0\").toString();\r\n      if (minHeight) {\r\n        inlineStyle += `min-height: ${minHeight};`;\r\n      }\r\n    }\r\n\r\n    if (inlineStyle) {\r\n      inlineStyle = `style=\"${inlineStyle}\"`;\r\n    }\r\n    var property = this.content?.text as { blocks: {}; markup: string };\r\n    var markup = property?.markup;\r\n    const innerHtml = `<div class=\"paragraph\" ${inlineStyle}>${markup}</div>`;\r\n    return html`${unsafeHTML(innerHtml)}`;\r\n  }\r\n\r\n  static override styles = [\r\n    UmbTextStyles,\r\n    css`\r\n      :host {\r\n        display: block;\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: var(--wysiwg-font-family, initial);\r\n      }\r\n      .paragraph {\r\n        font-size: var(--wysiwg-font-size-16);\r\n        line-height: var(--wysiwg-line-height-24);\r\n        text-shadow: var(--wysiwg-paragraph-text-shadow, none);\r\n      }\r\n      h2, h3{\r\n        color: var(--wysiwg-paragraph-headline-color, inherit);\r\n        text-shadow: var(--wysiwg-paragraph-headline-text-shadow, none);\r\n      }\r\n      h2 {\r\n        font-size: var(--wysiwg-font-size-24, 24px);\r\n        line-height: var(--wysiwg-line-height-28, 28px);\r\n        margin: var(--wysiwg-headline-paragraph-2-margin, 0);\r\n      }\r\n\r\n      h3 {\r\n        font-size: var(--wysiwg-font-size-16, 16px);\r\n        line-height: var(--wysiwg-line-height-24, 24px);\r\n        margin: var(--wysiwg-headline-paragraph-3-margin, 0);\r\n      }\r\n\r\n      p\r\n      {\r\n        font-size: var(--wysiwg-font-size-16, 16px);\r\n        line-height: var(--wysiwg-line-height-24, 24px);\r\n        margin: var(--wysiwg-p-paragraph-margin, 0);\r\n        padding: var(--wysiwg-p-paragraph-padding, 0);\r\n      }\r\n\r\n      a{\r\n        color: inherit;\r\n        text-decoration: var(--wysiwg-link-text-decoration, underline);\r\n      }\r\n\r\n      a:hover{\r\n        color: var(--wysiwg-link-hover-color, inherit);\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\nexport default WysiwgBlockParagraphView;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    [customElementName]: WysiwgBlockParagraphView;\r\n  }\r\n}\r\n"],"names":["customElementName","WysiwgBlockParagraphView","WysiwgBaseBlockEditorCustomViewElement","changedProperties","paragraphElement","_a","links","e","color","inlineStyle","layout","settings","_b","s","colorSetting","_c","v","minHeight","_d","property","_e","markup","innerHtml","html","unsafeHTML","UmbTextStyles","css","__decorateClass","customElement","WysiwgBlockParagraphView$1"],"mappings":";;;;;;;;AAWA,MAAMA,IAAoB;AAEb,IAAAC,IAAN,cACGC,EAAuC;AAAA,EAE5B,OAAOC,GAAyC;;AAE7D,QADJ,MAAM,OAAOA,CAAiB,GAC1BA,EAAkB,IAAI,SAAS,GAAG;AACpC,YAAMC,KAAmBC,IAAA,KAAK,eAAL,gBAAAA,EAAiB,cAAc;AACxD,UAAI,CAACD,EAAkB;AAEjB,YAAAE,IAAQF,EAAiB,cAAc,GAAG;AAChD,MAAIE,KACIA,EAAA,iBAAiB,SAAS,CAACC,MAAM;AACrC,QAAAA,EAAE,eAAe;AAAA,MAAA,CAClB,GAGH,KAAK,cAAc;AAAA,IAAA;AAAA,EACrB;AAAA,EAGO,SAAS;;AAChB,QAAIC,IAAQ,EAAa,OAAO,GAAG,GAC/BC,IAAc;AACd,SAAAJ,IAAA,KAAK,oBAAL,QAAAA,EAAsB,QAAQ;AAChC,YAAMK,IAAU,KAAyC,QACnDC,KAAWC,IAAA,KAAK,gBAAgB;AAAA,QACpC,CAACC,OAAMH,KAAA,gBAAAA,EAAQ,iBAAgBG,EAAE;AAAA,MAAA,EACjC,CAAC,MAFc,gBAAAD,EAEX,QAEAE,MACHC,IAAAJ,EAAS,OAAO,CAACK,MAAMA,EAAE,UAAU,OAAO,EAAE,CAAC,MAA7C,gBAAAD,EAAgD,UAG3CP;AACR,MAAIM,KAAA,QAAAA,EAAc,UACFL,IAAA,UAAUK,KAAA,gBAAAA,EAAc,KAAK;AAGvC,YAAAG,OAAaC,IAAAP,KAAA,gBAAAA,EAAU,KAAK,CAACK,MAAMA,EAAE,UAAU,iBAAlC,gBAAAE,EAAgD,UAAS,KAAK,SAAS;AAC1F,MAAID,MACFR,KAAe,eAAeQ,CAAS;AAAA,IACzC;AAGF,IAAIR,MACFA,IAAc,UAAUA,CAAW;AAEjC,QAAAU,KAAWC,IAAA,KAAK,YAAL,gBAAAA,EAAc,MACzBC,IAASF,KAAA,gBAAAA,EAAU;AACvB,UAAMG,IAAY,0BAA0Bb,CAAW,IAAIY,CAAM;AAC1D,WAAAE,IAAOC,EAAWF,CAAS,CAAC;AAAA,EAAA;AAqDvC;AAvGarB,EAqDK,SAAS;AAAA,EACvBwB;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CF;AAtGWzB,IAAN0B,EAAA;AAAA,EADNC,EAAc5B,CAAiB;AAAA,GACnBC,CAAA;AAyGb,MAAA4B,IAAe5B;"}