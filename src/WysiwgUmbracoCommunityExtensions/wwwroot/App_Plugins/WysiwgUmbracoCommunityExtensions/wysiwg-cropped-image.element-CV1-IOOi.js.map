{"version":3,"file":"wysiwg-cropped-image.element-CV1-IOOi.js","sources":["../../../Wysiwg/src/blocks/views/block-layout.view.ts","../../../Wysiwg/src/property-editors/picture/wysiwg-card-image.element.ts","../../../Wysiwg/src/blocks/components/deprecated/wysiwg-image-crop.element.ts","../../../Wysiwg/src/blocks/components/wysiwg-cropped-image.element.ts"],"sourcesContent":["import { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\r\nimport {\r\n  html,\r\n  customElement,\r\n  property,\r\n  css,\r\n  nothing,\r\n  state,\r\n  styleMap,\r\n  StyleInfo,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport type {\r\n  UmbBlockEditorCustomViewElement,\r\n} from \"@umbraco-cms/backoffice/block-custom-view\";\r\nimport {\r\n  UmbPropertyValueDataPotentiallyWithEditorAlias,\r\n} from \"@umbraco-cms/backoffice/property\";\r\nimport { UmbBlockGridValueModel } from \"@umbraco-cms/backoffice/block-grid\";\r\nimport { BlockGridLayoutModel, MediaPickerValueModel } from \"../types\";\r\nimport { ImageUrlData, WysiwgUmbracoCommunityExtensionsService } from \"../..\";\r\nimport WysiwgBaseBlockEditorCustomViewElement from \"./wysiwg-base-block-editor-custom.view\";\r\nimport { UpdateStatus } from \"../../util/updateStatusEnum\";\r\n\r\n//this is based on a copy of\r\n// Umbraco-CMS\\src\\\r\n//   Umbraco.Web.UI.Client\\src\\packages\\\r\n//      block\\block-grid\\components\\block-grid-block\\block-grid-block.element.ts\r\n\r\nconst blockLayoutInlineStyleDefaults: StyleInfo = {\r\n  backgroundImage: \"none\",\r\n  backgroundPosition: \"inherit\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundColor: \"transparent\",\r\n  padding: undefined,\r\n  minHeight: \"0\",\r\n}\r\n\r\nconst customElementName = \"wysiwg-block-layout-view\";\r\n@customElement(customElementName)\r\nexport class WysiwgBlockLayoutView\r\n  extends WysiwgBaseBlockEditorCustomViewElement {\r\n\r\n  @property({ attribute: false })\r\n  label?: string;\r\n\r\n  @property({ type: String, reflect: false })\r\n  icon?: string;\r\n\r\n  @property({ type: Boolean, reflect: true })\r\n  unpublished?: boolean;\r\n\r\n  @state()\r\n  private pageBackroundColor = blockLayoutInlineStyleDefaults.backgroundColor;\r\n\r\n  @state()\r\n  backgroundStyleMap: StyleInfo = blockLayoutInlineStyleDefaults;\r\n\r\n  @state()\r\n  private isfirstElement = false;\r\n\r\n  @state()\r\n  private pageBackgroundColor: string | undefined = undefined;\r\n\r\n  private get backgroundStyles() {\r\n    return {\r\n      backgroundImage: this.backgroundStyleMap.backgroundImage,\r\n      backgroundRepeat: this.backgroundStyleMap.backgroundRepeat,\r\n      backgroundPosition: this.backgroundStyleMap.backgroundPosition,\r\n      backgroundColor: this.backgroundStyleMap.backgroundColor,\r\n      padding: this.backgroundStyleMap.padding,\r\n      minHeight: this.backgroundStyleMap.minHeight,\r\n    } as StyleInfo;\r\n  }\r\n\r\n  private get backgroundStyleDefaults() {\r\n    return {\r\n      backgroundImage: blockLayoutInlineStyleDefaults.backgroundImage,\r\n      backgroundRepeat: blockLayoutInlineStyleDefaults.backgroundRepeat,\r\n      backgroundPosition: blockLayoutInlineStyleDefaults.backgroundPosition,\r\n      backgroundColor: blockLayoutInlineStyleDefaults.backgroundColor,\r\n      padding: blockLayoutInlineStyleDefaults.padding,\r\n      minHeight: blockLayoutInlineStyleDefaults.minHeight,\r\n    } as StyleInfo;\r\n  }\r\n\r\n  override async prozessSettings(gridValues: UmbBlockGridValueModel) {\r\n    const contentKey = \"\";// get from URL segment with RouteProvider?\r\n\r\n    if (gridValues.settingsData?.length) {\r\n      const viewElement = this as UmbBlockEditorCustomViewElement;\r\n      const layouts = gridValues.layout[\"Umbraco.BlockGrid\"];\r\n      if (!layouts) {\r\n        console.error(\"No layout found\");\r\n        return;\r\n      }\r\n\r\n      const firstLayoutKey = layouts[0]['contentKey'];\r\n      this.isfirstElement = firstLayoutKey === viewElement.contentKey;\r\n      const layout = layouts?.find(\r\n        (l) => l.contentKey === viewElement.contentKey\r\n      );\r\n      const setting = gridValues?.settingsData?.find(\r\n        (s) => s.key === layout?.settingsKey\r\n      );\r\n      const properties = setting?.values as BlockGridLayoutModel[] ?? [];\r\n      this.setBackgroudStyle(properties);\r\n      const backgroundImage = properties?.find((v) => v.alias === \"backgroundImage\")?.value as MediaPickerValueModel;\r\n      const mediaKey = backgroundImage?.length\r\n        ? backgroundImage[0].mediaKey\r\n        : \"\";\r\n      await this.#requestImageUrl(mediaKey)\r\n        .then((data) => {\r\n          if (data !== undefined && data !== \"error\") {\r\n            this.setBackgroudImageStyle(data);\r\n          }\r\n        });\r\n      if (!contentKey) {\r\n        await this.#requestBackgroundColor(contentKey.toString())\r\n          .then((data) => {\r\n            if (data !== undefined && data !== \"error\") {\r\n              this.pageBackgroundColor = data;\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  override async lastStepObservingProperties(pageProperties: Array<UmbPropertyValueDataPotentiallyWithEditorAlias>) {\r\n    if (!pageProperties) return;\r\n\r\n    let pageBackgroundColor = pageProperties.find((v) => v.alias === \"pageBackgroundColor\")?.value as {\r\n      label: string;\r\n      value: string;\r\n    }\r\n    if (pageBackgroundColor?.value) {\r\n      this.pageBackroundColor = pageBackgroundColor.value;\r\n    }\r\n  }\r\n\r\n  setBackgroudStyle(properties: BlockGridLayoutModel[]) {\r\n    const inlineStyles = this.backgroundStyleDefaults;\r\n\r\n    if (properties?.length) {\r\n      const settingsbackgroundColor = (\r\n        (properties?.find((v) => v.alias === \"backgroundColor\")?.value ?? {}) as {\r\n          label: string;\r\n          value: string;\r\n        }\r\n      ).value;\r\n      const backgroundColor = !settingsbackgroundColor\r\n        ? !this.pageBackgroundColor ? \"transparent\" : this.pageBackgroundColor\r\n        : settingsbackgroundColor;\r\n\r\n      const transparentBackground = this.isTransparentColor(backgroundColor);\r\n      if (backgroundColor) {\r\n        inlineStyles.backgroundColor = transparentBackground ? \"transparent\" : backgroundColor;\r\n      }\r\n\r\n      const minHeight = (properties?.find((v) => v.alias === \"minHeight\")?.value ?? \"0\").toString();\r\n      inlineStyles.minHeight = minHeight;\r\n\r\n      let padding = properties?.find((v) => v.alias === \"padding\")?.value.toString();\r\n      if (!padding) {\r\n        padding = (backgroundColor && !transparentBackground) ? \"10px\" : \"\";\r\n        console.debug(\"padding: \", padding);\r\n      }\r\n      inlineStyles.padding = padding;\r\n    }\r\n\r\n    this.backgroundStyleMap = inlineStyles;\r\n  }\r\n\r\n  setBackgroudImageStyle(imageUrl?: String) {\r\n    const inlineStyles = this.backgroundStyles;\r\n\r\n    const padding = inlineStyles.padding ?? blockLayoutInlineStyleDefaults.padding;\r\n    if (imageUrl) {\r\n      inlineStyles.backgroundImage = `url('${imageUrl}')`;\r\n      inlineStyles.backgroundPosition = \"inherit\";\r\n      inlineStyles.padding = !padding || padding === blockLayoutInlineStyleDefaults.padding\r\n        ? \"10px\"\r\n        : padding;\r\n    } else {\r\n      inlineStyles.backgroundImage = \"none\";\r\n      inlineStyles.backgroundPosition = \"-10000px\";\r\n    }\r\n\r\n    this.backgroundStyleMap = inlineStyles;\r\n  }\r\n\r\n  async #requestImageUrl(mediaItemId: string) {\r\n    if (!mediaItemId) {\r\n      return;\r\n    }\r\n    const options: ImageUrlData = {\r\n      query: {\r\n        mediaItemId,\r\n      },\r\n    };\r\n    const { data, error } =\r\n      await WysiwgUmbracoCommunityExtensionsService.imageUrl(options);\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      return \"error\";\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  async #requestBackgroundColor(mediaItemId: string) {\r\n    if (!mediaItemId) {\r\n      return;\r\n    }\r\n    const options: ImageUrlData = {\r\n      query: {\r\n        mediaItemId,\r\n      },\r\n    };\r\n    const { data, error } =\r\n      await WysiwgUmbracoCommunityExtensionsService.siteBackgroundColor(options);\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      return \"error\";\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  renderUpdateHint() {\r\n    const nameHtml = html`<umb-ufm-render inline .markdown=${this.label} .value=${this.content}></umb-ufm-render>`;\r\n\r\n    if (!this.isfirstElement) { return nameHtml; }\r\n\r\n    this.setUpdateStatus();\r\n    if (this.updateStatus !== UpdateStatus.Update) {\r\n      return nameHtml;\r\n    } else {\r\n      return html`\r\n        <uui-button id=\"tooltip-toggle\" popovertarget=\"tooltip-popover\" look=\"primary\" type=\"button\" color=\"danger\" compact style=\"margin-right: 0.5rem;\">\r\n          <uui-icon name=\"alert\"></uui-icon>\r\n        </uui-button>${nameHtml}\r\n\r\n        <uui-popover-container id=\"tooltip-popover\">\r\n\r\n          <div class=\"popover-container\" style=\"display: flex;flex-direction: column;padding: 1rem;border-radius: 3px;width: 200px;background: var(--uui-color-danger);box-shadow: var(--uui-shadow-depth-3);color: white;line-height: 1.4em;\">\r\n            <h3>\r\n              <umb-localize key=\"wysiwg_updateAvailableTitle\" .debug=${this._debug}>\r\n                Update Available\r\n              </umb-localize>\r\n            </h3>\r\n            <p>\r\n              <umb-localize key=\"wysiwg_updateAvailable\" .debug=${this._debug}>\r\n                An update is available for the WYSIWYG extensions.\r\n              </umb-localize>\r\n            </p>\r\n          </div>\r\n\r\n        </uui-popover-container>\r\n      `;\r\n    }\r\n  }\r\n\r\n  override render() {\r\n    const pageStyles = { backgroundColor: this.pageBackroundColor } as Readonly<StyleInfo>;;\r\n    const styles = this.backgroundStyleMap as Readonly<StyleInfo>;\r\n\r\n    return html`\r\n    <umb-ref-grid-block class=\"wysiwg\"\r\n      style=${styleMap(pageStyles)}\r\n      standalone\r\n      href=${(this.config?.showContentEdit\r\n        ? this.config?.editContentPath\r\n        : undefined) ?? \"\"}\r\n    >\r\n      <umb-icon slot=\"icon\" .name=${this.icon}></umb-icon>\r\n      <div slot=\"name\">${this.renderUpdateHint()}</div>\r\n      ${this.unpublished\r\n        ? html`<uui-tag\r\n            slot=\"name\"\r\n            look=\"secondary\"\r\n            title=${this.localize.term(\"wysiwg_notExposedDescription\")}\r\n            ><umb-localize key=\"wysiwg_notExposedLabel\"></umb-localize\r\n          ></uui-tag>`\r\n        : nothing}\r\n\r\n      <umb-block-grid-areas-container\r\n        slot=\"areas\"\r\n        style=\"${styleMap(styles)}\"\r\n      ></umb-block-grid-areas-container>\r\n    </umb-ref-grid-block>`;\r\n  }\r\n\r\n  static override styles = [\r\n    UmbTextStyles,\r\n    css`\r\n      :host {\r\n        display: flex;\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n      }\r\n\r\n      .left,\r\n      .right {\r\n        display: flexbox;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\nexport default WysiwgBlockLayoutView;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    [customElementName]: WysiwgBlockLayoutView;\r\n  }\r\n}\r\n","import { ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport { demandCustomElement, UUICardElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { html, css, nothing, customElement, property, state } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\nconst elementName = 'wysiwg-card-image';\r\n@customElement(elementName)\r\nexport class WysiwgCardImageElement extends UUICardElement {\r\n  /**\r\n   * Media name\r\n   * @type {string}\r\n   * @attr name\r\n   * @default ''\r\n   */\r\n  @property({ type: String })\r\n  name = '';\r\n\r\n  /**\r\n   * Media detail\r\n   * @type {string}\r\n   * @attr detail\r\n   * @default ''\r\n   */\r\n  @property({ type: String })\r\n  detail?: string;\r\n\r\n  /**\r\n   * Media file extension, without \".\"\r\n   * @type {string}\r\n   * @attr file-ext\r\n   * @default ''\r\n   */\r\n  @property({ type: String, attribute: 'file-ext' })\r\n  fileExt = '';\r\n\r\n  @state()\r\n  protected hasPreview = false;\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n\r\n    demandCustomElement(this, 'uui-symbol-folder');\r\n    demandCustomElement(this, 'uui-symbol-file');\r\n  }\r\n\r\n  private queryPreviews(e: Event): void {\r\n    this.hasPreview =\r\n      (e.composedPath()[0] as HTMLSlotElement).assignedElements({\r\n        flatten: true,\r\n      }).length > 0;\r\n  }\r\n\r\n  protected renderMedia() {\r\n    if (this.hasPreview === true) return '';\r\n\r\n    if (this.fileExt === '') {\r\n      return html`<uui-symbol-folder id=\"entity-symbol\"></uui-symbol-folder>`;\r\n    }\r\n\r\n    return html`<uui-symbol-file\r\n      id=\"entity-symbol\"\r\n      type=\"${this.fileExt}\"></uui-symbol-file>`;\r\n  }\r\n\r\n  #renderButton() {\r\n    return html`\r\n      <button\r\n        id=\"open-part\"\r\n        tabindex=${this.disabled ? (nothing as any) : '0'}\r\n        @click=${this.handleOpenClick}\r\n        @keydown=${this.handleOpenKeydown}>\r\n        ${this.#renderContent()}\r\n      </button>\r\n    `;\r\n  }\r\n\r\n  #renderLink() {\r\n    return html`\r\n      <a\r\n        id=\"open-part\"\r\n        tabindex=${this.disabled ? (nothing as any) : '0'}\r\n        href=${ifDefined(!this.disabled ? this.href : undefined)}\r\n        target=${ifDefined(this.target || undefined)}\r\n        rel=${ifDefined(\r\n      this.rel ||\r\n      ifDefined(\r\n        this.target === '_blank' ? 'noopener noreferrer' : undefined,\r\n      ),\r\n    )}>\r\n        ${this.#renderContent()}\r\n      </a>\r\n    `;\r\n  }\r\n\r\n  #renderContent() {\r\n    //return nothing;\r\n\r\n    return html`\r\n      <div id=\"content\" class=\"uui-text ellipsis\">\r\n        <span id=\"name\" title=\"${this.name}\">${this.name}</span>\r\n        <small id=\"detail\">${this.detail}<slot name=\"detail\"></slot></small>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  public render() {\r\n    return html` ${this.renderMedia()}\r\n      <slot @slotchange=${this.queryPreviews}></slot>\r\n      ${this.href ? this.#renderLink() : this.#renderButton()}\r\n      <!-- Select border must be right after .open-part -->\r\n      <div id=\"select-border\"></div>\r\n\r\n      <slot name=\"tag\"></slot>\r\n      <slot name=\"actions\"></slot>`;\r\n  }\r\n\r\n  static styles = [\r\n    ...UUICardElement.styles,\r\n    css`\r\n      #entity-symbol {\r\n        align-self: center;\r\n        width: 60%;\r\n        margin-bottom: var(--uui-size-layout-1);\r\n        padding: var(--uui-size-space-6);\r\n      }\r\n\r\n      slot[name='tag'] {\r\n        position: absolute;\r\n        top: var(--uui-size-4);\r\n        right: var(--uui-size-4);\r\n        display: flex;\r\n        justify-content: right;\r\n        z-index: 2;\r\n      }\r\n\r\n      slot[name='actions'] {\r\n        position: absolute;\r\n        top: var(--uui-size-4);\r\n        right: var(--uui-size-4);\r\n        display: flex;\r\n        justify-content: right;\r\n        z-index: 2;\r\n        opacity: 0;\r\n        transition: opacity 120ms;\r\n      }\r\n      :host(:focus) slot[name='actions'],\r\n      :host(:focus-within) slot[name='actions'],\r\n      :host(:hover) slot[name='actions'] {\r\n        opacity: 1;\r\n      }\r\n\r\n      slot:not([name])::slotted(*) {\r\n        align-self: center;\r\n        border-radius: var(--uui-border-radius);\r\n        object-fit: cover;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n      }\r\n\r\n      #open-part {\r\n        position: absolute;\r\n        z-index: 1;\r\n        inset: 0;\r\n        color: var(--uui-color-interactive);\r\n        border: none;\r\n        cursor: pointer;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-end;\r\n      }\r\n\r\n      :host([disabled]) #open-part {\r\n        pointer-events: none;\r\n        color: var(--uui-color-contrast-disabled);\r\n      }\r\n\r\n      #open-part:hover {\r\n        color: var(--uui-color-interactive-emphasis);\r\n      }\r\n      #open-part:hover #name {\r\n        text-decoration: underline;\r\n      }\r\n\r\n      #open-part #name {\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 1;\r\n        -webkit-box-orient: vertical;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        overflow-wrap: anywhere;\r\n      }\r\n\r\n      :host([image]:not([image=''])) #open-part {\r\n        transition: opacity 0.5s 0.5s;\r\n        opacity: 0;\r\n      }\r\n\r\n      #content {\r\n        position: relative;\r\n        display: flex;\r\n        width: 100%;\r\n        align-items: center;\r\n        font-family: inherit;\r\n        box-sizing: border-box;\r\n        text-align: left;\r\n        word-break: break-word;\r\n        padding-top: var(--uui-size-space-3);\r\n        opacity: 0.5;\r\n      }\r\n      #content:hover {\r\n        opacity: 1;\r\n      }\r\n      #content::before {\r\n        content: '';\r\n        position: absolute;\r\n        inset: 0;\r\n        z-index: -1;\r\n        border-top: 1px solid var(--uui-color-divider);\r\n        border-radius: 0 0 var(--uui-border-radius) var(--uui-border-radius);\r\n        background-color: var(--uui-color-surface);\r\n        pointer-events: none;\r\n        opacity: 0.96;\r\n      }\r\n\r\n      #detail {\r\n        opacity: 0.6;\r\n      }\r\n\r\n      .ellipse{\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n\r\n      :host(\r\n          [image]:not([image='']):hover,\r\n          [image]:not([image='']):focus,\r\n          [image]:not([image='']):focus-within,\r\n          [selected][image]:not([image='']),\r\n          [error][image]:not([image=''])\r\n        )\r\n        #open-part {\r\n        opacity: 1;\r\n        transition-duration: 120ms;\r\n        transition-delay: 0s;\r\n      }\r\n\r\n      :host([selectable]) #open-part {\r\n        inset: var(--uui-size-space-3) var(--uui-size-space-4);\r\n      }\r\n      :host(:not([selectable])) #content {\r\n        padding: var(--uui-size-space-3) var(--uui-size-space-4);\r\n      }\r\n      :host([selectable]) #content::before {\r\n        inset: calc(var(--uui-size-space-3) * -1)\r\n          calc(var(--uui-size-space-4) * -1);\r\n        top: 0;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    [elementName]: WysiwgCardImageElement;\r\n  }\r\n}\r\n","import {\r\n  css,\r\n  customElement,\r\n  html,\r\n  property,\r\n  state,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\r\nimport { CropUrlData, WysiwgUmbracoCommunityExtensionsService } from \"../../..\";\r\n\r\nconst elementName = \"wysiwg-image-crop\";\r\n@customElement(elementName)\r\nexport class WysiwgBlocksImageCropElement extends UmbLitElement {\r\n  //#region Properties\r\n\r\n  @property({ type: String })\r\n  mediaKey?: string;\r\n\r\n  @property({ type: String })\r\n  alt?: string;\r\n\r\n  @property({ type: String })\r\n  cropAlias? = \"\";\r\n\r\n  @property({ type: Number })\r\n  width = 1200;\r\n\r\n  @property()\r\n  icon = \"icon-picture\";\r\n\r\n  /**\r\n   * The `loading` state of the thumbnail.\r\n   * @enum {'lazy' | 'eager'}\r\n   * @default 'lazy'\r\n   */\r\n  @property()\r\n  loading: (typeof HTMLImageElement)[\"prototype\"][\"loading\"] = \"lazy\";\r\n  //#endregion\r\n\r\n  //#region state\r\n  @state()\r\n  private _isLoading = true;\r\n\r\n  @state()\r\n  private _imageUrl: string | undefined = \"\";\r\n\r\n  //#endregion\r\n\r\n  #intersectionObserver?: IntersectionObserver;\r\n\r\n  override connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.loadImage();\r\n  }\r\n\r\n  override disconnectedCallback() {\r\n\r\n    super.disconnectedCallback();\r\n    this.#intersectionObserver?.disconnect();\r\n  }\r\n\r\n  override updated(changedProperties: Map<string | number | symbol, unknown>) {\r\n    super.updated(changedProperties);\r\n\r\n    if (\r\n      changedProperties.has(\"mediaKey\") ||\r\n      changedProperties.has(\"cropAlias\")\r\n    ) {\r\n      this.loadImage();\r\n    } else if (changedProperties.has(\"_imageUrl\")) {\r\n    }\r\n  }\r\n\r\n  private loadImage() {\r\n    if (this.loading === \"lazy\") {\r\n      this.#intersectionObserver = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          this.generateImageUrl(entries[0].boundingClientRect.width);\r\n          this.#intersectionObserver?.disconnect();\r\n        }\r\n      });\r\n      this.#intersectionObserver.observe(this);\r\n    } else {\r\n      this.generateImageUrl(this.width);\r\n    }\r\n  }\r\n\r\n  #renderLoading() {\r\n    if (this._isLoading) {\r\n      return html`<div id=\"loader\"><uui-loader></uui-loader></div>`;\r\n    }\r\n  }\r\n\r\n  #renderImageCrop() {\r\n    try {\r\n      if (!this._imageUrl) {\r\n        return html`<div id=\"icon\" part=\"img\"></div>`;\r\n      } else {\r\n        return html`<img\r\n          id=\"figure-image\"\r\n          part=\"img\"\r\n          src=\"${this._imageUrl ?? \"\"}\"\r\n          alt=\"${this.alt ?? \"\"}\"\r\n          loading=\"${this.loading}\"\r\n          draggable=\"false\"\r\n        />`;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"wysiwg-image-crop.renderImageCrop error\", e);\r\n    }\r\n  }\r\n\r\n  private async requestCropUrl(width: number): Promise<string | undefined> {\r\n    if (!this.mediaKey) {\r\n      return;\r\n    }\r\n    const options: CropUrlData = {\r\n      query: {\r\n        mediaItemId: this.mediaKey,\r\n        cropAlias: this.cropAlias,\r\n        width,\r\n      },\r\n    };\r\n\r\n    const { data, error } =\r\n      await WysiwgUmbracoCommunityExtensionsService.cropUrl(options);\r\n\r\n    this._isLoading = false;\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      return \"error\";\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      return data;\r\n    }\r\n\r\n    return \"no data\";\r\n  }\r\n\r\n  private async generateImageUrl(width: number) {\r\n    await this.requestCropUrl(width).then((data) => {\r\n      if (data === \"error\") {\r\n        this._imageUrl = undefined;\r\n        return;\r\n      } else if (data === \"no data\") {\r\n        this._imageUrl = undefined;\r\n        return;\r\n      }\r\n      this._imageUrl = data;\r\n    });\r\n  }\r\n\r\n  override render() {\r\n    const img = this.#renderImageCrop();\r\n    const loading = this.#renderLoading();\r\n    return html` ${img} ${loading} `;\r\n  }\r\n\r\n  static override styles = [\r\n    UmbTextStyles,\r\n    css`\r\n      :host {\r\n        display: block;\r\n        position: relative;\r\n        overflow: hidden;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n\r\n      #loader {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n\r\n      ::part(img) {\r\n        display: block;\r\n        width: 100%;\r\n        height: auto;\r\n        overflow: visible;\r\n\r\n        background-image: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill-opacity=\".1\"><path d=\"M50 0h50v50H50zM0 50h50v50H0z\"/></svg>');\r\n        background-size: 10px 10px;\r\n        background-repeat: repeat;\r\n      }\r\n      img {\r\n        width: 100%;\r\n        height: auto;\r\n      }\r\n\r\n      #icon {\r\n        width: 100%;\r\n        height: 100%;\r\n        font-size: var(--uui-size-8);\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    [elementName]: WysiwgBlocksImageCropElement;\r\n  }\r\n}\r\n","import {\r\n  css,\r\n  customElement,\r\n  html,\r\n  property,\r\n  state,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\r\nimport { V2CropUrlData, WysiwgUmbracoCommunityExtensionsService } from \"../..\";\r\nimport { WysiwgMediaPickerPropertyValueEntry } from \"../../property-editors/picture/types\";\r\nimport { UmbPropertyEditorUiElement, UmbPropertyValueChangeEvent } from \"@umbraco-cms/backoffice/property-editor\";\r\n\r\nconst elementName = \"wysiwg-cropped-image\";\r\n@customElement(elementName)\r\nexport class WysiwgCroppedImageElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n  //#region Properties\r\n  @property({ type: String })\r\n  value: string = \"\";\r\n\r\n  @property({ type: String })\r\n  alt: string = \"\";\r\n\r\n  @property({ type: Object })\r\n  mediaItem?: WysiwgMediaPickerPropertyValueEntry | null = null;\r\n\r\n  @property({ type: Number })\r\n  width = 1200;\r\n\r\n  @property()\r\n  icon = \"icon-picture\";\r\n\r\n  /**\r\n   * The `loading` state of the thumbnail.\r\n   * @enum {'lazy' | 'eager'}\r\n   * @default 'lazy'\r\n   */\r\n  @property()\r\n  loading: (typeof HTMLImageElement)[\"prototype\"][\"loading\"] = \"lazy\";\r\n  //#endregion\r\n\r\n  //#region state\r\n\r\n  @state()\r\n  private _isLoading = true;\r\n\r\n  //#endregion\r\n\r\n  private _prevImgSrc: string = \"\";\r\n\r\n  #intersectionObserver?: IntersectionObserver;\r\n\r\n  override render() {\r\n    const img = this.#renderImageCrop();\r\n    const loading = this.#renderLoading();\r\n    return html` ${img} ${loading} `;\r\n  }\r\n\r\n  override connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.loadImage();\r\n  }\r\n\r\n  override disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.#intersectionObserver?.disconnect();\r\n  }\r\n\r\n  override updated(changedProperties: Map<string | number | symbol, unknown>) {\r\n    super.updated(changedProperties);\r\n\r\n    if (changedProperties.has(\"mediaItem\")) {\r\n      this.loadImage();\r\n    }\r\n    if (changedProperties.has(\"value\")) {\r\n      if (this._prevImgSrc !== this.value) {\r\n        this.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n        this._prevImgSrc = this.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadImage() {\r\n    if (this.loading === \"lazy\") {\r\n      this.#intersectionObserver = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          this.generateImageUrl(entries[0].boundingClientRect.width);\r\n          this.#intersectionObserver?.disconnect();\r\n        }\r\n      });\r\n      this.#intersectionObserver.observe(this);\r\n    } else {\r\n      this.generateImageUrl(this.width);\r\n    }\r\n  }\r\n\r\n  #renderLoading() {\r\n    if (this._isLoading) {\r\n      return html`<div id=\"loader\"><uui-loader></uui-loader></div>`;\r\n    }\r\n  }\r\n\r\n  #renderImageCrop() {\r\n    try {\r\n      if (!this.value) {\r\n        return html`<div id=\"icon\" part=\"img\"></div>`;\r\n      } else {\r\n        return html`<img\r\n          id=\"figure-image\"\r\n          src=\"${this.value ?? \"\"}\"\r\n          alt=\"${this.alt ?? this.mediaItem?.mediaKey ?? \"\"}\"\r\n          loading=\"${this.loading}\"\r\n          draggable=\"false\"\r\n        />`;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"wysiwg-image-crop.renderImageCrop error\", e);\r\n    }\r\n  }\r\n\r\n  private async requestCropUrl(width: number): Promise<string | undefined> {\r\n    if (!this.mediaItem?.mediaKey) {\r\n      return;\r\n    }\r\n    const cropAlias = this.mediaItem.selectedCropAlias?.toLowerCase() ?? \"\";\r\n    const crop = this.mediaItem.crops?.find((c) => c.alias === cropAlias);\r\n    const selectedCrop = !crop\r\n      ? \"\"\r\n      : JSON.stringify(crop);\r\n    const selectedFocalPoint = !this.mediaItem.focalPoint\r\n      ? \"\"\r\n      : JSON.stringify(this.mediaItem.focalPoint);\r\n    const options: V2CropUrlData = {\r\n      query: {\r\n        mediaItemId: this.mediaItem.mediaKey,\r\n        cropAlias: cropAlias,\r\n        width,\r\n        selectedCrop: selectedCrop,\r\n        selectedFocalPoint: selectedFocalPoint\r\n      },\r\n    };\r\n\r\n    const { data, error } =\r\n      await WysiwgUmbracoCommunityExtensionsService.v2CropUrl(options);\r\n\r\n    this._isLoading = false;\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      return \"error\";\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      return data;\r\n    }\r\n\r\n    return \"no data\";\r\n  }\r\n\r\n  private async generateImageUrl(width: number) {\r\n    await this.requestCropUrl(width).then((data) => {\r\n      if (data === \"error\") {\r\n        this.value = \"\";\r\n        return;\r\n      } else if (data === \"no data\") {\r\n        this.value = \"\";\r\n        return;\r\n      }\r\n      this.value = data ?? \"\";\r\n    });\r\n  }\r\n\r\n  static override styles = [\r\n    UmbTextStyles,\r\n    css`\r\n      :host {\r\n        display: block;\r\n        position: relative;\r\n        overflow: hidden;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n\r\n      #loader {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n\r\n      img {\r\n        display: flex;\r\n        height: auto;\r\n        width: var(--wysiwg-cropped-image-width, 100%);\r\n        margin: var(--wysiwg-image-border-radius, 0);\r\n        border-radius: var(--wysiwg-image-border-radius, 0);\r\n\r\n        background-image: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill-opacity=\".1\"><path d=\"M50 0h50v50H50zM0 50h50v50H0z\"/></svg>');\r\n        background-size: 10px 10px;\r\n        background-repeat: repeat;\r\n      }\r\n\r\n      #icon {\r\n        width: 100%;\r\n        height: 100%;\r\n        font-size: var(--uui-size-8);\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    [elementName]: WysiwgCroppedImageElement;\r\n  }\r\n}\r\n"],"names":["_WysiwgBlockLayoutView_instances","requestImageUrl_fn","requestBackgroundColor_fn","blockLayoutInlineStyleDefaults","customElementName","WysiwgBlockLayoutView","WysiwgBaseBlockEditorCustomViewElement","__privateAdd","gridValues","contentKey","_a","viewElement","layouts","firstLayoutKey","layout","l","setting","_b","s","properties","backgroundImage","_c","v","mediaKey","__privateMethod","data","pageProperties","pageBackgroundColor","inlineStyles","settingsbackgroundColor","backgroundColor","transparentBackground","minHeight","padding","imageUrl","nameHtml","html","UpdateStatus","pageStyles","styles","styleMap","nothing","mediaItemId","options","error","WysiwgUmbracoCommunityExtensionsService","UmbTextStyles","css","__decorateClass","property","state","customElement","WysiwgBlockLayoutView$1","_WysiwgCardImageElement_instances","renderButton_fn","renderLink_fn","renderContent_fn","elementName","WysiwgCardImageElement","UUICardElement","demandCustomElement","ifDefined","_intersectionObserver","_WysiwgBlocksImageCropElement_instances","renderLoading_fn","renderImageCrop_fn","WysiwgBlocksImageCropElement","UmbLitElement","__privateGet","changedProperties","__privateSet","entries","width","img","loading","_WysiwgCroppedImageElement_instances","WysiwgCroppedImageElement","UmbPropertyValueChangeEvent","cropAlias","crop","c","selectedCrop","selectedFocalPoint","e"],"mappings":"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"}