{"version":3,"file":"dashboard.element-k3NXgfvx.js","sources":["../../../Wysiwg/src/dashboards/versionStatusEnum.ts","../../../Wysiwg/src/dashboards/dashboard.element.ts"],"sourcesContent":["export enum VersionStatus {\r\n  Unknown,\r\n  UpToDate,\r\n  Update,\r\n  Install\r\n};\r\n","import {\r\n  LitElement,\r\n  css,\r\n  html,\r\n  customElement,\r\n  state,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { UUIButtonElement } from \"@umbraco-cms/backoffice/external/uui\";\r\nimport {\r\n  UMB_NOTIFICATION_CONTEXT,\r\n  UmbNotificationContext,\r\n} from \"@umbraco-cms/backoffice/notification\";\r\nimport {\r\n  UMB_CURRENT_USER_CONTEXT,\r\n  UmbCurrentUserModel,\r\n} from \"@umbraco-cms/backoffice/current-user\";\r\nimport { WysiwgUmbracoCommunityExtensionsService } from \"../api\";\r\nimport { VersionStatus } from \"./versionStatusEnum\";\r\nimport { umbConfirmModal, UmbConfirmModalData } from \"@umbraco-cms/backoffice/modal\";\r\n\r\n@customElement(\"wysiwg-dashboard\")\r\nexport class WysiwgDashboardElement extends UmbElementMixin(LitElement) {\r\n\r\n\r\n  @state()\r\n  private _contextCurrentUser: UmbCurrentUserModel | undefined = undefined;\r\n  @state()\r\n  private _updateStatus: VersionStatus | undefined = undefined;\r\n\r\n  private _debug: boolean = true;\r\n\r\n  #notificationContext: UmbNotificationContext | undefined = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_NOTIFICATION_CONTEXT, (notificationContext) => {\r\n      this.#notificationContext = notificationContext;\r\n    });\r\n\r\n    this.consumeContext(UMB_CURRENT_USER_CONTEXT, (currentUserContext) => {\r\n      // When we have the current user context\r\n      // We can observe properties from it, such as the current user or perhaps just individual properties\r\n      // When the currentUser object changes we will get notified and can reset the @state properrty\r\n      this.observe(currentUserContext.currentUser, (currentUser) => {\r\n        this._contextCurrentUser = currentUser;\r\n      });\r\n    });\r\n  }\r\n\r\n  #onClickInstall = async (ev: Event) => {\r\n    const buttonElement = ev.target as UUIButtonElement;\r\n    if (!buttonElement || buttonElement.state === \"waiting\") return;\r\n    buttonElement.state = \"waiting\";\r\n\r\n    const { data, error } = await WysiwgUmbracoCommunityExtensionsService.install();\r\n\r\n    if (error) {\r\n      if (this.#notificationContext) {\r\n        this.#notificationContext.stay(\"danger\", {\r\n          data: {\r\n            headline: this.localize.term(\"wysiwg_installError\"),\r\n            message: `${this.localize.term(\"wysiwg_installErrorDescription\")} ${error}`,\r\n          },\r\n        });\r\n      }\r\n      buttonElement.state = \"failed\";\r\n      console.error(error);\r\n      return \"error\";\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      if (data === \"Installed\") {\r\n        if (this.#notificationContext) {\r\n          this.#notificationContext.peek(\"positive\", {\r\n            data: {\r\n              headline: this.localize.term(\"wysiwg_installSuccess\"),\r\n              message: this.localize.term(\"wysiwg_installSuccessDescription\"),\r\n            },\r\n          });\r\n        }\r\n        this._updateStatus = VersionStatus.UpToDate;\r\n        buttonElement.state = \"success\";\r\n      } else {\r\n        buttonElement.state = \"failed\";\r\n      }\r\n    }\r\n  };\r\n\r\n  confirmUninstall = async () => {\r\n\r\n  }\r\n\r\n  #onClickUninstall = async (ev: Event) => {\r\n    const modalData: UmbConfirmModalData = {\r\n      color: 'danger',\r\n      headline: this.localize.term(\"wysiwg_unistallConfirmHeadline\", { debug: this._debug, }),\r\n      content: html`${this.localize.term(\"wysiwg_uninstallConfirmDescription\", { debug: this._debug, })}`,\r\n      confirmLabel: this.localize.term(\"wysiwg_okConfirmButtonLabel\", { debug: this._debug, }),\r\n      cancelLabel: this.localize.term(\"wysiwg_cancelConfirmButtonLabel\", { debug: this._debug, }),\r\n    };\r\n    await umbConfirmModal(this, modalData)\r\n\r\n    const buttonElement = ev.target as UUIButtonElement;\r\n    if (!buttonElement || buttonElement.state === \"waiting\") return;\r\n    buttonElement.state = \"waiting\";\r\n\r\n    const { data, error } = await WysiwgUmbracoCommunityExtensionsService.unInstall();\r\n\r\n    if (error) {\r\n      if (this.#notificationContext) {\r\n        this.#notificationContext.stay(\"danger\", {\r\n          data: {\r\n            headline: this.localize.term(\"wysiwg_uninstallError\"),\r\n            message: `${this.localize.term(\"wysiwg_uninstallErrorDescription\")} ${error}`,\r\n          },\r\n        });\r\n        buttonElement.state = \"failed\";\r\n      }\r\n      console.error(error);\r\n      return \"error\";\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      if (data === \"Uninstalled\") {\r\n        if (this.#notificationContext) {\r\n          this.#notificationContext.peek(\"positive\", {\r\n            data: {\r\n              headline: this.localize.term(\"wysiwg_uninstallSuccessTitle\"),\r\n              message: this.localize.term(\"wysiwg_uninstallSuccessDescription\")\r\n            },\r\n          });\r\n        }\r\n        buttonElement.state = \"success\";\r\n      } else {\r\n        buttonElement.state = \"failed\";\r\n      }\r\n      this._updateStatus = undefined;\r\n    }\r\n  };\r\n\r\n\r\n  private async getUpdateStatus() {\r\n    if (this._updateStatus) return;\r\n\r\n    const { data, error } =\r\n      await WysiwgUmbracoCommunityExtensionsService.getUpdateStatusCode();\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      if (this.#notificationContext) {\r\n        this.#notificationContext.stay(\"danger\", {\r\n          data: {\r\n            headline: this.localize.term(\"wysiwg_versionError\"),\r\n            message: `${this.localize.term(\"wysiwg_versionErrorDescription\")} ${error}`,\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    if (data !== undefined) {\r\n      this._updateStatus = data;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this._contextCurrentUser?.isAdmin) {\r\n      return html`<umb-localize key=\"wysiwg_\" .debug=${this._debug}>\r\n      <p>Only admins can see this dashboard</p>\r\n      </umb-localize>`;\r\n    }\r\n\r\n    this.getUpdateStatus();\r\n\r\n    return html`${this.renderSetupBox()} ${this.renderUninstallBox()}`;\r\n  }\r\n\r\n  private renderSetupBox() {\r\n    if (this._updateStatus === undefined) { return; }\r\n\r\n    if (this._updateStatus === VersionStatus.UpToDate) { return; }\r\n\r\n    const buttonLabel = this._updateStatus === VersionStatus.Install\r\n      ? this.localize.term(\"wysiwg_setupButtonLabel\", { debug: this._debug, })\r\n      : this.localize.term(\"wysiwg_updateButtonLabel\", { debug: this._debug, });\r\n\r\n    return html`\r\n      <uui-box headline=${this.localize.term(\"wysiwg_setupTitle\", {\r\n      debug: this._debug,\r\n    })}>\r\n        <uui-button\r\n          color=\"positive\"\r\n          look=\"primary\"\r\n          @click=\"${this.#onClickInstall}\"\r\n        >\r\n        ${buttonLabel}\r\n        </uui-button>\r\n        <div slot=\"header\"></div>\r\n        <umb-localize key=\"wysiwg_setupButtonDescription\" .debug=${this._debug}>\r\n          <p>\r\n            This will create the document and data types needed for WYSIWG block\r\n            editor views.\r\n          </p>\r\n        </umb-localize>\r\n      </uui-box>\r\n    `;\r\n  }\r\n\r\n  private renderUninstallBox() {\r\n    if (this._updateStatus === undefined) { return; }\r\n    if (this._updateStatus === VersionStatus.Install) { return; }\r\n\r\n    const buttonLabel = this.localize.term(\"wysiwg_uninstallButtonLabel\", { debug: this._debug, });\r\n    return html`\r\n      <uui-box headline=${this.localize.term(\"wysiwg_uninstallTitle\", {\r\n      debug: this._debug,\r\n    })}>\r\n        <uui-button\r\n          color=\"danger\"\r\n          look=\"primary\"\r\n          @click=\"${this.#onClickUninstall}\"\r\n        >\r\n        ${buttonLabel}\r\n        </uui-button>\r\n        <div slot=\"header\"></div>\r\n        <umb-localize key=\"wysiwg_uninstallButtonDescription\" .debug=${this._debug}>\r\n          <p>\r\n            This will remove the document and data types needed for WYSIWG block\r\n            editor views.\r\n          </p>\r\n        </umb-localize>\r\n      </uui-box>\r\n    `;\r\n  }\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: grid;\r\n        gap: var(--uui-size-layout-1);\r\n        padding: var(--uui-size-layout-1);\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n      }\r\n\r\n      uui-box {\r\n        margin-bottom: var(--uui-size-layout-1);\r\n      }\r\n\r\n      h2 {\r\n        margin-top: 0;\r\n      }\r\n\r\n      .wide {\r\n        grid-column: span 3;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\nexport default WysiwgDashboardElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"wysiwg-dashboard\": WysiwgDashboardElement;\r\n  }\r\n}\r\n"],"names":["VersionStatus","VersionStatus2","_notificationContext","_onClickInstall","_onClickUninstall","WysiwgDashboardElement","UmbElementMixin","LitElement","__privateAdd","ev","buttonElement","data","error","WysiwgUmbracoCommunityExtensionsService","__privateGet","modalData","html","umbConfirmModal","UMB_NOTIFICATION_CONTEXT","notificationContext","__privateSet","UMB_CURRENT_USER_CONTEXT","currentUserContext","currentUser","_a","buttonLabel","css","__decorateClass","state","customElement","WysiwgDashboardElement$1"],"mappings":"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"}