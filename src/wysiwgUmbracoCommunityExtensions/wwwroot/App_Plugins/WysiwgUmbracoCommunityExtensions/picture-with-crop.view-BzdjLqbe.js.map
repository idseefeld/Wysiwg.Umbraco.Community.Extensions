{"version":3,"file":"picture-with-crop.view-BzdjLqbe.js","sources":["../../../Wysiwg/src/blocks/views/picture-with-crop.view.ts"],"sourcesContent":["import {\r\n  html,\r\n  customElement,\r\n  LitElement,\r\n  property,\r\n  css,\r\n  unsafeHTML,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport type { UmbBlockDataType } from \"@umbraco-cms/backoffice/block\";\r\nimport type { UmbBlockEditorCustomViewElement } from \"@umbraco-cms/backoffice/block-custom-view\";\r\nimport { ColorType, PictureWithCropCustomViewProps } from \"./types\";\r\n\r\n@customElement(\"wysiwg-picturewithcrop-view\")\r\nexport class PictureWithCropCustomView\r\n  extends UmbElementMixin(LitElement)\r\n  implements UmbBlockEditorCustomViewElement\r\n{\r\n  defaultColor: ColorType = { label: \"Black\", value: \"#000\" };\r\n\r\n  @property({ attribute: false })\r\n  content?: UmbBlockDataType;\r\n\r\n  render() {\r\n    const pictureWithCrop = this.content as PictureWithCropCustomViewProps;\r\n    if (!pictureWithCrop) {\r\n      return html`<div class=\"error\">Invalid data</div>`; //ToDo: get message from localized language file\r\n    }\r\n    const mediaItems = pictureWithCrop?.mediaItem ?? [];\r\n    const mediaKey = mediaItems.length ? mediaItems[0].mediaKey : \"\";\r\n    const cropAlias = pictureWithCrop?.cropAlias[0] ?? \"\";\r\n    const captionColor =\r\n      pictureWithCrop?.captionColor?.value ?? this.defaultColor.value;\r\n    const caption = pictureWithCrop?.figCaption;\r\n\r\n    if (!mediaKey) {\r\n      return html`<div class=\"error\">No Image selected or found</div>`; //ToDo: get message from localized language file\r\n    } else {\r\n      const img = html`<wysiwg-image-crop\r\n        mediaKey=\"${mediaKey}\"\r\n        alt=\"${this.content?.alternativeText ?? \"\"}\"\r\n        cropAlias=\"${cropAlias}\"\r\n      ></wysiwg-image-crop>`;\r\n\r\n      const inlineStyle = `style=\"color: ${captionColor};\"`;\r\n      const figCaption = caption\r\n        ? unsafeHTML(`<figcaption ${inlineStyle}>${caption}</figcaption>`)\r\n        : \"\";\r\n\r\n      return html`<figure>${img}${figCaption}</figure>`;\r\n    }\r\n  }\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n        height: auto;\r\n        box-sizing: border-box;\r\n        background-color: transparent;\r\n        /* border-radius: 9px; */\r\n        padding: 0;\r\n      }\r\n      .error {\r\n        color: red;\r\n        font-weight: bold;\r\n        text-align: center;\r\n      }\r\n      figure {\r\n        margin: 0;\r\n        padding: 0;\r\n        display: block;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\nexport default PictureWithCropCustomView;\r\n"],"names":["PictureWithCropCustomView","UmbElementMixin","LitElement","pictureWithCrop","html","mediaItems","mediaKey","cropAlias","captionColor","_a","caption","img","_b","inlineStyle","figCaption","unsafeHTML","css","__decorateClass","property","customElement","PictureWithCropCustomView$1"],"mappings":";;;;;;;AAcO,IAAMA,IAAN,cACGC,EAAgBC,CAAU,EAEpC;AAAA,EAHO,cAAA;AAAA,UAAA,GAAA,SAAA,GAIL,KAAA,eAA0B,EAAE,OAAO,SAAS,OAAO,OAAO;AAAA,EAAA;AAAA,EAK1D,SAAS;;AACP,UAAMC,IAAkB,KAAK;AAC7B,QAAI,CAACA;AACI,aAAAC;AAEH,UAAAC,KAAaF,KAAA,gBAAAA,EAAiB,cAAa,CAAC,GAC5CG,IAAWD,EAAW,SAASA,EAAW,CAAC,EAAE,WAAW,IACxDE,KAAYJ,KAAA,gBAAAA,EAAiB,UAAU,OAAM,IAC7CK,MACJC,IAAAN,KAAA,gBAAAA,EAAiB,iBAAjB,gBAAAM,EAA+B,UAAS,KAAK,aAAa,OACtDC,IAAUP,KAAA,gBAAAA,EAAiB;AAEjC,QAAKG,GAEE;AACL,YAAMK,IAAMP;AAAA,oBACEE,CAAQ;AAAA,iBACbM,IAAA,KAAK,YAAL,gBAAAA,EAAc,oBAAmB,EAAE;AAAA,qBAC7BL,CAAS;AAAA,8BAGlBM,IAAc,iBAAiBL,CAAY,MAC3CM,IAAaJ,IACfK,EAAW,eAAeF,CAAW,IAAIH,CAAO,eAAe,IAC/D;AAEG,aAAAN,YAAeO,CAAG,GAAGG,CAAU;AAAA,IAAA;AAb/B,aAAAV;AAAA,EAcT;AAyBJ;AA7DaJ,EAuCJ,SAAS;AAAA,EACdgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBF;AArDAC,EAAA;AAAA,EADCC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GANnBlB,EAOX,WAAA,WAAA,CAAA;AAPWA,IAANiB,EAAA;AAAA,EADNE,EAAc,6BAA6B;AAAA,GAC/BnB,CAAA;AA+Db,MAAAoB,IAAepB;"}