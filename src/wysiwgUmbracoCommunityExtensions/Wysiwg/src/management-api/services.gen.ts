// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { GetServerConfigurationError, GetServerConfigurationResponse, GetServerInformationError, GetServerInformationResponse, GetServerStatusError, GetServerStatusResponse, GetServerTroubleshootingError, GetServerTroubleshootingResponse, GetServerUpgradeCheckError, GetServerUpgradeCheckResponse } from './types.gen';

export const client = createClient(createConfig());

export class ServerService {
    public static getServerConfiguration<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerConfigurationResponse, GetServerConfigurationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/configuration'
        });
    }

    public static getServerInformation<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerInformationResponse, GetServerInformationError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/information'
        });
    }

    public static getServerStatus<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerStatusResponse, GetServerStatusError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/status'
        });
    }

    public static getServerTroubleshooting<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerTroubleshootingResponse, GetServerTroubleshootingError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/troubleshooting'
        });
    }

    public static getServerUpgradeCheck<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetServerUpgradeCheckResponse, GetServerUpgradeCheckError, ThrowOnError>({
            ...options,
            url: '/umbraco/management/api/v1/server/upgrade-check'
        });
    }

}
