@using Umbraco.Extensions
@model IEnumerable<BlockGridItem>
@{
    if (Model?.Any() != true) { return; }
}

<div class="umb-block-grid__layout-container">
    @foreach (var item in Model)
    {
        var areasTemplates = new List<string>();
        for (var i = 1; i <= 20; i++)
        {
            areasTemplates.Add($"{WysiwgUmbracoCommunityExtensions.Constants.Prefix}layout{i}");
        }
        var alias = areasTemplates.InvariantContains(item.Content.ContentType.Alias)
        ? BlockGridTemplateExtensions.DefaultItemAreasTemplate
        : item.Content.ContentType.Alias;
        var partialViewName = string.Concat(BlockGridTemplateExtensions.DefaultFolder, "Components/", alias.Replace(WysiwgUmbracoCommunityExtensions.Constants.Prefix,""));

        <div class="umb-block-grid__layout-item"
             data-content-element-type-alias="@alias"
             data-content-element-type-key="@item.Content.ContentType.Key"
             data-element-key="@item.ContentKey"
             data-col-span="@item.ColumnSpan"
             data-row-span="@item.RowSpan"
             style=" --umb-block-grid--item-column-span: @item.ColumnSpan; --umb-block-grid--item-row-span: @item.RowSpan; ">
            @{
                try
                {
                    @await Html.PartialAsync(partialViewName, item)
                }
                catch (InvalidOperationException)
                {
                    <p>
                        <strong>Could not render component of type: @(alias)</strong>
                        <br />
                        This likely happened because the partial view <em>@partialViewName</em> could not be found.
                    </p>
                }
            }
        </div>
    }
</div>
